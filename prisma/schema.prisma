// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @db.Uuid
  username  String     @unique @db.VarChar(15)
  role      UserRole   @default(User)
  password  String     @db.VarChar(64)
  createdAt DateTime   @default(now()) @db.Timestamp(6)
  updatedAt DateTime   @updatedAt @db.Timestamp(6)
  sessions  Session[]
  exercises Exercise[]
  workouts  Workout[]
}

enum UserRole {
  Admin
  User
}

model Session {
  id        String   @id @db.Uuid
  token     String   @unique @db.VarChar(64)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
}

model Exercise {
  id                    String                 @id @db.Uuid
  name                  String                 @unique @db.VarChar(64)
  createdAt             DateTime               @default(now()) @db.Timestamp(6)
  createdBy             User                   @relation(fields: [createdById], references: [id])
  createdById           String                 @db.Uuid
  updatedAt             DateTime               @updatedAt @db.Timestamp(6)
  muscles               Muscle[]               @default([])
  workoutBlockExercises WorkoutBlockExercise[]
}

enum Muscle {
  Abdominals
  Obliques
  Forearms
  Biceps
  Shoulders
  Traps
  Chest
  Quads
  Hamstrings
  Lowerback
  Glutes
  Lats
  Traps_Middle
  Calves
  Triceps
}

model Workout {
  id        String         @id @db.Uuid
  date      DateTime       @db.Date
  user      User           @relation(fields: [userId], references: [id])
  userId    String         @db.Uuid
  createdAt DateTime       @default(now()) @db.Timestamp(6)
  updatedAt DateTime       @updatedAt @db.Timestamp(6)
  blocks    WorkoutBlock[]
}

model WorkoutBlock {
  id        String                 @id @db.Uuid
  order     Int                    @default(0)
  workout   Workout                @relation(fields: [workoutId], references: [id])
  workoutId String                 @db.Uuid
  createdAt DateTime               @default(now()) @db.Timestamp(6)
  updatedAt DateTime               @updatedAt @db.Timestamp(6)
  exercises WorkoutBlockExercise[]
}

model WorkoutBlockExercise {
  id         String       @id @db.Uuid
  order      Int          @default(0)
  block      WorkoutBlock @relation(fields: [blockId], references: [id])
  blockId    String       @db.Uuid
  exercise   Exercise     @relation(fields: [exerciseId], references: [id])
  exerciseId String       @db.Uuid
  createdAt  DateTime     @default(now()) @db.Timestamp(6)
  updatedAt  DateTime     @updatedAt @db.Timestamp(6)
  sets       WorkoutSet[]
}

model WorkoutSet {
  id                     String               @id @db.Uuid
  order                  Int                  @default(0)
  isWarmup               Boolean              @default(false)
  workoutBlockExercise   WorkoutBlockExercise @relation(fields: [workoutBlockExerciseId], references: [id])
  workoutBlockExerciseId String               @db.Uuid
  createdAt              DateTime             @default(now()) @db.Timestamp(6)
  updatedAt              DateTime             @updatedAt @db.Timestamp(6)
  weight                 Float                @db.Real
  reps                   Int                  @db.Integer
}
